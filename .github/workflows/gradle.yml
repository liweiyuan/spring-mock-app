# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build
    - name: Run tests
      run: ./gradlew test

  performance-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Install Apache Benchmark
        run: sudo apt-get update && sudo apt-get install -y apache2-utils

      - name: Start the application
        run: |
          ./gradlew bootRun &
          echo "App started, waiting for it to be ready..."
          # 等待应用启动 (适当调整时间)
          sleep 30

      - name: Run performance test with Apache Benchmark
        run: |
          # 假设应用运行在8080端口，根据实际情况调整
          # -n: 请求总数
          # -c: 并发数
          # -k: 使用HTTP KeepAlive
          # 根据实际API路径调整URL
          ab -n 100000 -c 100 -k http://localhost:8080/api/products

      - name: Create performance report
        run: |
          echo "## Performance Test Results" > performance_report.md
          echo "" >> performance_report.md
          echo "Test executed with 10000 requests and concurrency level of 100" >> performance_report.md
          echo "" >> performance_report.md
          echo "Full test results:" >> performance_report.md
          echo '```' >> performance_report.md
          ab -n 10000 -c 100 -k http://localhost:8080/api/health >> performance_report.md
          echo '```' >> performance_report.md

      - name: Upload performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance_report.md
